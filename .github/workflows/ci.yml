name: PHP Board CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  # CI Job: PHP 웹 애플리케이션 이미지를 빌드하여 Docker Hub에 푸시
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push PHP Web Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-php-board-app:latest

  # CD Job: EC2 서버에 접속하여 Docker Compose로 전체 서비스 배포
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # --- EC2 서버에서 실행될 명령어들 ---

            # 1. 프로젝트를 저장할 디렉토리로 이동
            APP_DIR="/home/ubuntu/app"
            mkdir -p $APP_DIR
            cd $APP_DIR

            # 2. 최신 소스 코드를 GitHub에서 clone
            REPO_URL="https://github.com/leegyulim/my-php-board-project.git"
            rm -rf my-php-board-project
            git clone $REPO_URL

            cd my-php-board-project

            # 4. DB 비밀번호 등 민감한 정보를 .env 파일로 생성
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}" > .env
            echo "MYSQL_DATABASE=${{ secrets.DB_NAME }}" >> .env
            echo "MYSQL_USER=${{ secrets.DB_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

            #    모든 docker 및 docker-compose 명령어를 'docker' 그룹 권한으로 실행합니다.
            sudo -E docker compose pull
            sudo -E docker compose up -d --build
            sudo -E docker image prune -f